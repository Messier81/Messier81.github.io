{"version":3,"sources":["comps/pics/github.svg","comps/pics/linkedin.svg","comps/pics/resume.svg","comps/pics/email.svg","comps/pics/question.svg","comps/pics/project.svg","comps/pics/react.svg","comps/pics/bootstrap.svg","comps/pics/javascript.svg","comps/pics/html5.svg","comps/pics/css3.svg","comps/AboutMe.jsx","comps/Navi.jsx","comps/MainView.jsx","comps/Projects.jsx","comps/Front.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","Jumbotron","fluid","className","id","Component","Navi","Navbar","sticky","expand","Container","Row","Col","href","src","QuePic","alt","ProPic","GitPic","LIPic","ResPic","ConPic","MainView","xs","Projects","sm","ReactLogo","BootstrapLogo","JSLogo","HTML5Logo","CSS3Logo","Front","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a79169c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.619231ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.d758315c.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.a14a6aee.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.2508df20.svg\";","module.exports = __webpack_public_path__ + \"static/media/project.1f917513.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.e9f3d01c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.c4ce29f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.de79c8f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/html5.eb0bfe64.svg\";","module.exports = __webpack_public_path__ + \"static/media/css3.2ca88453.svg\";","import React, { Component } from \"react\";\r\nimport \"./Front.css\";\r\n\r\n//Bootstrap\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron fluid className=\"aboutMeJumbo\" id=\"aboutMe\">\r\n        <span className=\"aboutMeText\">About Me</span>\r\n        <p className=\"aboutMePara\">\r\n          <p>Hello there,</p>\r\n          <p>\r\n            I'm a recent graduate from York University with a bachelor's degree\r\n            in Computer Science.\r\n          </p>\r\n          <p>\r\n            My courses heavily focused on Computer Science, Math, and\r\n            Philosophy.\r\n          </p>\r\n          <p>\r\n            I design, build immersive and beautiful web applications through\r\n            carefully crafted code and user-centric design.\r\n          </p>\r\n          <p>\r\n            I am naturally curious, a problem solver, and a continuous learner.\r\n          </p>\r\n          <p>\r\n            I have many years of experience in customer service as well as\r\n            teaching, which have taught me solid communication and conflict\r\n            resolution skills.\r\n          </p>\r\n          <p>\r\n            So are you looking for a hard-working, communicative and caring\r\n            developer?\r\n          </p>\r\n          <p>\r\n            I am super excited to work on ambitious projects with positive\r\n            people.\r\n          </p>\r\n          <p>\r\n            Check out my resume and feel free to contact me at the email below.\r\n          </p>\r\n        </p>\r\n        <p className=\"emailText\">Email</p>\r\n        <p className=\"actualEmail\">nesanyorku@gmail.com</p>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Front.css\";\r\n\r\n//Bootstrap\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//Pics\r\nimport GitPic from \"./pics/github.svg\";\r\nimport LIPic from \"./pics/linkedin.svg\";\r\nimport ResPic from \"./pics/resume.svg\";\r\nimport ConPic from \"./pics/email.svg\";\r\nimport QuePic from \"./pics/question.svg\";\r\nimport ProPic from \"./pics/project.svg\";\r\n\r\nexport default class Navi extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar sticky=\"top\" expand=\"lg\" className=\"navBarMod\">\r\n        <Container fluid className=\"navRow\">\r\n          <Row className=\"navRow\">\r\n            <Col className=\"navCol\">\r\n              <a href=\"#aboutMe\" className=\"navCol\">\r\n                <img className=\"devLinkImage\" src={QuePic} alt=\"AboutMe Logo\" />\r\n              </a>\r\n            </Col>\r\n            <Col className=\"navCol\">\r\n              <a href=\"#projectsJumbo\" className=\"navCol\">\r\n                <img\r\n                  className=\"devLinkImage\"\r\n                  src={ProPic}\r\n                  alt=\"Projects Logo\"\r\n                />\r\n              </a>\r\n            </Col>\r\n            <Col className=\"navCol\">\r\n              <a href=\"https://github.com/Messier81\" className=\"navCol\">\r\n                <img className=\"devLinkImage\" src={GitPic} alt=\"GitHub Logo\" />\r\n              </a>\r\n            </Col>\r\n            <Col className=\"navCol\">\r\n              <a\r\n                href=\"https://www.linkedin.com/in/sivanesan-vettivel-992318182/\"\r\n                className=\"navCol\"\r\n              >\r\n                <img className=\"devLinkImage\" src={LIPic} alt=\"LinkedIn Logo\" />\r\n              </a>\r\n            </Col>\r\n            <Col className=\"navCol\">\r\n              <a href=\"#aboutMe\" className=\"navCol\">\r\n                <img className=\"devLinkImage\" src={ResPic} alt=\"Resume Logo\" />\r\n              </a>\r\n            </Col>\r\n            <Col className=\"navCol\">\r\n              <a href=\"#aboutMe\" className=\"navCol\">\r\n                <img\r\n                  className=\"devLinkImage\"\r\n                  src={ConPic}\r\n                  alt=\"ContactMe Logo\"\r\n                />\r\n              </a>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Front.css\";\r\n\r\n//Bootstrap\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default class MainView extends Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron fluid className=\"mainJumbo\">\r\n        <Container className=\"mainCont\">\r\n          <Row>\r\n            <Col className=\"myName\">Nesan V.</Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs=\"auto\" className=\"myDesc\">\r\n              Developer &middot; Musician &middot; Writer\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Front.css\";\r\n\r\n//Bootstrap\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n//Images\r\nimport ReactLogo from \"./pics/react.svg\";\r\nimport BootstrapLogo from \"./pics/bootstrap.svg\";\r\nimport JSLogo from \"./pics/javascript.svg\";\r\nimport HTML5Logo from \"./pics/html5.svg\";\r\nimport CSS3Logo from \"./pics/css3.svg\";\r\n\r\nexport default class Projects extends Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron className=\"projJumbo\" id=\"projectsJumbo\">\r\n        <Container fluid>\r\n          <Row className=\"projNFL\">\r\n            <Col sm={7} className=\"projName\">\r\n              <a href=\"https://messier81.github.io/Reddit-Image-Viewer/\">\r\n                <span>R</span>eddit&nbsp;<span>I</span>mage&nbsp;\r\n                <span>V</span>iewer\r\n              </a>\r\n            </Col>\r\n            <Col>\r\n              <img className=\"usedFL\" src={ReactLogo} alt=\"React Logo\" />\r\n            </Col>\r\n            <Col>\r\n              <img\r\n                className=\"usedFL\"\r\n                src={BootstrapLogo}\r\n                alt=\"Bootstrap Logo\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <img className=\"usedFL\" src={JSLogo} alt=\"JavaScript Logo\" />\r\n            </Col>\r\n            <Col>\r\n              <img className=\"usedFL\" src={HTML5Logo} alt=\"HTML5 Logo\" />\r\n            </Col>\r\n            <Col>\r\n              <img className=\"usedFL\" src={CSS3Logo} alt=\"CSS3 Logo\" />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"projDesc\">\r\n            <Col className=\"projSum\">\r\n              RIV (Reddit Image Viewer) is a fully front-end web application\r\n              that allows the user to browse subreddits on the website\r\n              Reddit.com and to view only the images posted on them. Build with\r\n              React and Bootstrap, this site clears all ads, comments, and\r\n              everything else to display only the images.\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Front.css\";\r\n\r\n//Comps\r\nimport AboutMe from \"./AboutMe\";\r\nimport Navi from \"./Navi\";\r\nimport MainView from \"./MainView\";\r\nimport Projects from \"./Projects\";\r\n\r\nexport default class Front extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"frontMain\">\r\n        <Navi />\r\n        <MainView />\r\n        <AboutMe />\r\n        <Projects />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Front from \"./comps/Front\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Front} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}